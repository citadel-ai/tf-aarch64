ARG PYTHON_VERSION
ARG MINOR_VERSION

FROM python:$PYTHON_VERSION as tf-build
COPY --from=bazel:4.2 /usr/local/bin/bazel /usr/local/bin
RUN apt-get -y install git

RUN git clone https://github.com/tensorflow/tensorflow
WORKDIR /tensorflow
# if MINOR_VERSION is given checkout that specific tag, else use lates patch
RUN if [ "$MINOR_VERSION" = "x" ] ; then git checkout r2.8 ; else git checkout tags/v2.8.$MINOR_VERSION ; fi

ENV PYTHONUNBUFFERED=1
RUN pip install -U pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1'
RUN pip install -U keras_applications --no-deps
RUN pip install -U keras_preprocessing --no-deps
ENV TF_NEED_CUDA=0 \
TF_NEED_TENSORRT=0 \
PYTHON_BIN_PATH="/usr/local/bin/python" \
USE_DEFAULT_PYTHON_LIB_PATH=1 \
TF_NEED_ROCM=0 \
CC_OPT_FLAGS="-Wno-sign-compare" \
TF_DOWNLOAD_CLANG=0 \
TF_SET_ANDROID_WORKSPACE=0
RUN ./configure
RUN bazel build --config=opt -c opt //tensorflow/tools/pip_package:build_pip_package
RUN ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

FROM python:$PYTHON_VERSION as tf-install
COPY --from=tf-build /tmp/tensorflow_pkg/*.whl wheels/
RUN pip install /wheels/tensorflow-*.whl
RUN curl https://raw.githubusercontent.com/keras-team/keras-io/master/examples/vision/mnist_convnet.py > test.py
RUN python test.py

CMD ["python"]
